/** * Created by jbmar on 30/04/2017. */const express = require('express');const Helper = require('../core/Helpers');const fs = require('fs');const uniqid = require('uniqid');const makeDir = require('make-dir');const thumb = require('node-thumbnail').thumb;const multer = require('multer');const path = require('path');const Storage = multer.diskStorage({    destination: function (req, file, callback) {        callback(null, "./public/profils/" + req.session.user.id);    },    filename: function (req, file, callback) {        callback(null, file.fieldname + "_" + Date.now() + "_" + file.originalname);    }});const upload = multer({ storage: Storage, fileFilter:(req, file, cb) => {    if (!file.originalname.match(/\.(jpg|jpeg|png|gif)$/)) {        return cb(new Error('Only image files are allowed!'));    }    cb(null, true);} }).single("photos-profil"); //Field name and max countclass AccountController {    constructor() {        if (!app) {            console.error('Error! Exiting... You must provide the Express instance to controllers.');            process.exit(1);        }        this.router = express.Router();        this.registerRoutes();        app.use('/', this.router);    }    registerRoutes() {        this.accountRoute();        this.accountPostRoute();    }    accountRoute() {        this.router.get('/account', (req, res) => {            if (req.session.start) {                makeDir('./public/profils/' + req.session.user.id);                res.render('./views/account/accountContent.pug', {                    title: 'Mon compte !!!'                });            } else {                res.redirect('../accueil');            }        });    }    accountPostRoute() {        this.router.post("/account/Upload", (req, res) => {            upload(req, res, (err) => {                if (err) {                    console.error(err);                    Helper.sendResponseToClient("Something went wrong!", 1, res);                } else {                    let validImage = ["image/gif", "image/jpeg", "image/png"];                    if (validImage.indexOf(req.file.mimetype) >= 0) {                        if (req.file.size <= 3000000) {                            const data = {                                'mess': "La photo est enregistrÃ©e!",                                'srcPhoto': req.file.destination + '/' + req.file.filename                            };                               Helper.sendResponseToClient(data , 0, res);                        } else {                            Helper.sendResponseToClient("L'image est trop volumineuse ! (max: 1,5Mo)", 1, res);                        }                    } else {                        //remove file ? ou trouver un moyen de ne pas l'accepter sans faire afficher d'err dans la console                        Helper.sendResponseToClient("Le fichier n'est un jpg, png, ou gif !", 1, res);                    }                }            });        });    }}module.exports = AccountController;